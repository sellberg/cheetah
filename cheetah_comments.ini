#
# Sample .ini file for cspad_cryst
# Anton Barty, CFEL, February 2011
#
# Comments Jonas Sellberg, Andrew Martin, Jan Feldkamp, March 2011
#
#
# Geometry
#
#jas: geometry calibration for cspad detector pixels. we used current pixelmap for 
#quick offline analysis of H2O data, a better one from LCLS exists in cspad-cryst/ 
#and is called cspad2_1_online_pixel_map.h5
#
geometry=/cfel/tempdata/LCLS/LCLS-201102//cspad-cryst/cspad_pixelmap_SKassem.h5
#
#
#Peak masks
#
#jas: masks out pixels used for hitfinding, even though all pixels are saved to 
# files. this is only used if hitfinderUsepeakmask is enabled
# amartin: There is a separate mask for each instance of the hitfinder. If no name is given
# the whole detector is used
#
peakmask=/cfel/tempdata/LCLS/LCLS-201102/cspad-cryst/peakmask-inner400.h5
watermask=/cfel/tempdata/LCLS/LCLS-201102/cspad-cryst/peakmask-inner400.h5
icemask=/cfel/tempdata/LCLS/LCLS-201102/cspad-cryst/peakmask-inner400.h5
backgroundmask=/cfel/tempdata/LCLS/LCLS-201102/cspad-cryst/peakmask-inner400.h5
pixelSize=110e-6
useCenterCorrection=0		#jas: centers the square hole of the detector (assumes beam is centered)
#
#
# Bad pixel mask
#
# amartin: A mask which specifies pixels to ignore for all processing.
useBadPixelMask=1
#
badpixelMask=geometry/cspad_badpixelmap.h5
#
#
#Dark calibration (electronic offsets)
#
#jas: only used if subtractDarkcal is enabled, for generateDarkcal the file is 
#saved in the same directory as the script is run, so it should then be moved to 
#the darkcal folder
#amartin: generate darkcal is set, other parameters are ignored
#
useDarkcalSubtraction=1
darkcal=/cfel/tempdata/LCLS/LCLS-201102/darkcal/r0156-darkcal.h5
generateDarkcal=0
#
#
# Common mode (pedastal) subtraction
#
#jas: subtracts common-mode background from the cmfloor*100 % pixels with the 
#lowest intensity, doesn't currently work properly for H2O data
subtractCMModule=0
#
##jas: subtracts common-mode background just as subtractCMModule, but cuts each 
#asic into several sub-modules that each are treated separately
subtractCMSubModule=0
#
# amartin: percentage of pixels to use for common mode calculation
cmfloor=0.02
#
#
# Gain calibration
#
# amartin: turns on gain correction, file to read gain map from.
# InvertGain applies map by division (1) or mulitplication (0)
# (BUG: division may not be implemented yet) 
#
useGaincal=0
gaincal=/cfel/tempdata/LCLS/LCLS-201102/cspad-cryst/gainmap-uniform.h5
invertGain=1
#
#
# Running background subtraction (persistent photon background)
#
#jas: auto-background subtraction of the average made out of the last selfDarkMemory 
#number of events that do not contain hits. this can be used in addition to subtractDarkcal,
# since it is calculated from the selfDarkMemory events after the regular dark calibration 
#is subtracted. if scaleDarkcal is enabled the generated average is scaled before it 
#is subtracted, which seems to give funny results for H2O data so far (contrast looks wrong)
#
useSubtractPersistentBackground=1
bgMemory=50		#jas: sets the number of events (just before the
#			current one) used to calculate the self dark calibration
startFrames=200  #jas: sets the start frame from which the hitfinding starts.  #			the events before the start frame are necessary to determine   
#			useSubtractPersistentBackground and autohotpixel if enabled
scaleBackground=1	#jas: enables scaling of the persistent background
#
#
# Suppress consistently hot pixels
#
#jas: determines hot pixels that have a readout of hotpixADC after background 
#subtraction with at least a frequency of hotpixfreq*100 % during the last 
#hotpixmemory events. this currently works poorly for H2O data
#
useAutoHotpixel=1
hotpixADC=500		#jas: sets the intensity threshold after background 
#			subtraction for determining a hot pixel
hotpixfreq=0.9		#jas: sets the frequency that the pixel has to occur 
#			during the last hotpixmemory events
hotpixmemory=50		#jas: sets the number of events (just before the 
#			current one) used to calculate the hot pixels
#
# Attenuation correction
useAttenuationCorrection=0	#jas: positive non-zero value enables the attenuation correction, 0 saves attenuation to events as separate value, negative non-zero value disables attenuation calculation completely
attenuation=/reg/d/psdm/cxi/cxi25410/scratch/cheetah_input_files/attenuations.dat	#jas: input file with list of calculated transmissions for various thicknesses of Si in 20 um steps
#
#
# Hitfinding
#
#jas: Algorithm: determines hitfinder algorithm. 3 different ones exist 
#with different hitfinding criteria: 
# 1: if hitfinderADC intensity is fulfilled for hitfinderNAT pixels => HIT
# 2: if hitfinderADC intensity is fulfilled for hitfinderNAT pixels with a 
#number of neighboring pixels between hitfinderMinPixCount and hitfinderMaxPixCount 
#that also exceed the hitfinderADC threshold => HIT
# 3: if hitfinderADC intensity is fulfilled for a number of groups of pixels 
#between hitfinderNpeaks and hitfinderNpeaksMax, where each group is defined 
#by a number of neighboring pixels between hitfinderMinPixCount and 
#hitfinderMaxPixCount => HIT
#
hitfinder=1             #jas: enables hitfinding
hitfinderAlgorithm=3
hitfinderADC=600	#jas: sets the intensity threshold after background subtraction
hitfinderNpeaks=25	#jas: sets the number of peaks (defined by groups of pixels) 
#			for determining a hit
hitfinderNpeaksMax=1000 #jas: sets the maximum number of peaks for determining a hit, 
#			if more peaks than this number appears (which should be way 
#			above the physical limit of Bragg peaks), one can be 
#			certain hitfinding isn't working properly and the event is discarded
hitfinderMinPixCount=4  #jas: sets the minimum number of pixels necessary to define a peak, 
#			used to reject single-pixel or double-pixel noise
hitfinderMaxPixCount=25 #jas: sets the maximum number of pixels that are allowed 
#			to define a peak, used to reject large areas above the 
#			threshold (e.g. water ring for crystal data)
hitfinderUsePeakmask=0  #jas: enables the mask defined by peakmask for limiting the detector part #			that is used for hitfinding
hitfinderNAT=20		#jas: sets the number of pixels that has to fulfill the 
#			above criteria for determining a hit
#
# Hitfinding - ice (use to find patterns with the ice in it)
# (calls same function as Hitfinding)
icefinder=1
icefinderAlgorithm=3
icefinderADC=600
icefinderNpeaks=25
icefinderNpeaksMax=1000
icefinderMinPixCount=4
icefinderMaxPixCount=25
icefinderUsePeakmask=0
icefinderNAT=20
#
# Hitfinding - ice (use to find patterns with the ice in it)
# (calls same function as Hitfinding)
waterfinder=1
waterfinderAlgorithm=3
waterfinderADC=600
waterfinderNpeaks=25
waterfinderNpeaksMax=1000
waterfinderMinPixCount=4
waterfinderMaxPixCount=25
waterfinderUsePeakmask=0
waterfinderNAT=20
#
# Hitfinding - background. 
# amartin: If used, the persistant background 
# is updated when this hitfinder returns a "non-hit"
# if not used then normal hitfinder is used.
# (calls same function as Hitfinding)
backgroundfinder=1
backgroundfinderAlgorithm=3
backgroundfinderADC=600
backgroundfinderNpeaks=25
backgroundfinderNpeaksMax=1000
backgroundfinderMinPixCount=4
backgroundfinderMaxPixCount=25
backgroundfinderUsePeakmask=0
backgroundfinderNAT=20
#
# Powder pattern generation
powdersum=1		#jas: saves the powder sum to an hdf5 file
powderthresh=500	#jas: pixels whose values are below this value 
#			will be ignored when updating the powder sum 
saveInterval=10		#jas: interval for updating the saved powder 
#			sum and the raw sum while running a job
#
# Angular averages from	powder patterns
powderSAXS=0	   	#jas: calculates SAXS from powder sum
deltaqSAXS=1		#jas: determines step size of the binning for the angular averages
#
# Angular X-Ray Cross-Correlation Analysis (XCCA)
useCorrelation=0    #jas: 0: do nothing, 1: apply cross correlation algorithm 1 (regular), 2: apply cross correlation algorithm 2 (fast)
autoCorrelationOnly=1	#jas: calculates only the autocorrelation if enabled (autoCorrelationOnly != 0), otherwise calculates angular averages as well
fastCorrelationStartQ=100		# in pixel numbers counted from the center of the detector
fastCorrelationStopQ=600
fastCorrelationNumQ=50			# number of rings, or q-values between startQ and stopQ
fastCorrelationStartPhi=0		# in degrees: start value for phi
fastCorrelationStopPhi=360		# in degrees: stop value for phi
fastCorrelationNumPhi=256		# number of phi steps along each ring, powers of two are especially fast in the FFT
fastCorrelationLUTdim1 = 100;	# dimensions of the lookup table needed for fast autocorrelation
fastCorrelationLUTdim2 = 100;	# smaller numbers are faster, but less accurate; numbers shouldn't be bigger than pixel number of the detector


#
# Saving stuff
savehits=1		#jas: saves the hits to separate hdf5 files
saveRaw=1		#jas: saves the hits in raw format and saves raw sum to an hdf5 file if powdersum is enabled
hdf5dump=0		#jas: saves each shot to separate hdf5 files
#
# Verbosity
debugLevel=1		#jas: controls the number of outputs to the terminal 
#			while running a job
#
# Number of threads
nthreads=32	#jas: number of threads used for the analysis algorithm, 
#		this is the maximum number of events that can be processed 
#		at any one time
